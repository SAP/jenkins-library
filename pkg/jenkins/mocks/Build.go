// Code generated by mockery v2.7.5. DO NOT EDIT.

package mocks

import (
	context "context"

	gojenkins "github.com/bndr/gojenkins"

	mock "github.com/stretchr/testify/mock"
)

// Build is an autogenerated mock type for the Build type
type Build struct {
	mock.Mock
}

// GetArtifacts provides a mock function with given fields:
func (_m *Build) GetArtifacts() []gojenkins.Artifact {
	ret := _m.Called()

	var r0 []gojenkins.Artifact
	if rf, ok := ret.Get(0).(func() []gojenkins.Artifact); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]gojenkins.Artifact)
		}
	}

	return r0
}

// IsRunning provides a mock function with given fields: ctx
func (_m *Build) IsRunning(ctx context.Context) bool {
	ret := _m.Called(ctx)

	var r0 bool
	if rf, ok := ret.Get(0).(func(context.Context) bool); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Poll provides a mock function with given fields: ctx, options
func (_m *Build) Poll(ctx context.Context, options ...interface{}) (int, error) {
	var _ca []interface{}
	_ca = append(_ca, ctx)
	_ca = append(_ca, options...)
	ret := _m.Called(_ca...)

	var r0 int
	if rf, ok := ret.Get(0).(func(context.Context, ...interface{}) int); ok {
		r0 = rf(ctx, options...)
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, ...interface{}) error); ok {
		r1 = rf(ctx, options...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
