// Code generated by mockery v2.43.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// CredentialsManager is an autogenerated mock type for the CredentialsManager type
type CredentialsManager struct {
	mock.Mock
}

type CredentialsManager_Expecter struct {
	mock *mock.Mock
}

func (_m *CredentialsManager) EXPECT() *CredentialsManager_Expecter {
	return &CredentialsManager_Expecter{mock: &_m.Mock}
}

// Update provides a mock function with given fields: _a0, _a1, _a2, _a3
func (_m *CredentialsManager) Update(_a0 context.Context, _a1 string, _a2 string, _a3 interface{}) error {
	ret := _m.Called(_a0, _a1, _a2, _a3)

	if len(ret) == 0 {
		panic("no return value specified for Update")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string, interface{}) error); ok {
		r0 = rf(_a0, _a1, _a2, _a3)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CredentialsManager_Update_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Update'
type CredentialsManager_Update_Call struct {
	*mock.Call
}

// Update is a helper method to define mock.On call
//   - _a0 context.Context
//   - _a1 string
//   - _a2 string
//   - _a3 interface{}
func (_e *CredentialsManager_Expecter) Update(_a0 interface{}, _a1 interface{}, _a2 interface{}, _a3 interface{}) *CredentialsManager_Update_Call {
	return &CredentialsManager_Update_Call{Call: _e.mock.On("Update", _a0, _a1, _a2, _a3)}
}

func (_c *CredentialsManager_Update_Call) Run(run func(_a0 context.Context, _a1 string, _a2 string, _a3 interface{})) *CredentialsManager_Update_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(interface{}))
	})
	return _c
}

func (_c *CredentialsManager_Update_Call) Return(_a0 error) *CredentialsManager_Update_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *CredentialsManager_Update_Call) RunAndReturn(run func(context.Context, string, string, interface{}) error) *CredentialsManager_Update_Call {
	_c.Call.Return(run)
	return _c
}

// NewCredentialsManager creates a new instance of CredentialsManager. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCredentialsManager(t interface {
	mock.TestingT
	Cleanup(func())
}) *CredentialsManager {
	mock := &CredentialsManager{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
