// Code generated by piper's step-generator. DO NOT EDIT.

package cmd

import "github.com/SAP/jenkins-library/pkg/config"
import "github.com/SAP/jenkins-library/cmd/abapAddonAssemblyKit"

// GetStepMetadata return a map with all the step metadata mapped to their stepName
func GetAllStepMetadata() map[string]config.StepData {
	return map[string]config.StepData{
		"abapAddonAssemblyKitCheck":                 AbapAddonAssemblyKitCheckMetadata(),
		"abapAddonAssemblyKitCheckCVs":              abapAddonAssemblyKit.AbapAddonAssemblyKitCheckCVsMetadata(),
		"abapAddonAssemblyKitCheckPV":               AbapAddonAssemblyKitCheckPVMetadata(),
		"abapAddonAssemblyKitCreateTargetVector":    AbapAddonAssemblyKitCreateTargetVectorMetadata(),
		"abapAddonAssemblyKitPublishTargetVector":   AbapAddonAssemblyKitPublishTargetVectorMetadata(),
		"abapAddonAssemblyKitRegisterPackages":      AbapAddonAssemblyKitRegisterPackagesMetadata(),
		"abapAddonAssemblyKitReleasePackages":       AbapAddonAssemblyKitReleasePackagesMetadata(),
		"abapAddonAssemblyKitReserveNextPackages":   AbapAddonAssemblyKitReserveNextPackagesMetadata(),
		"abapEnvironmentAssembleConfirm":            AbapEnvironmentAssembleConfirmMetadata(),
		"abapEnvironmentAssemblePackages":           AbapEnvironmentAssemblePackagesMetadata(),
		"abapEnvironmentBuild":                      AbapEnvironmentBuildMetadata(),
		"abapEnvironmentCheckoutBranch":             AbapEnvironmentCheckoutBranchMetadata(),
		"abapEnvironmentCloneGitRepo":               AbapEnvironmentCloneGitRepoMetadata(),
		"abapEnvironmentCreateSystem":               AbapEnvironmentCreateSystemMetadata(),
		"abapEnvironmentCreateTag":                  AbapEnvironmentCreateTagMetadata(),
		"abapEnvironmentPullGitRepo":                AbapEnvironmentPullGitRepoMetadata(),
		"abapEnvironmentPushATCSystemConfig":        AbapEnvironmentPushATCSystemConfigMetadata(),
		"abapEnvironmentRunATCCheck":                AbapEnvironmentRunATCCheckMetadata(),
		"abapEnvironmentRunAUnitTest":               AbapEnvironmentRunAUnitTestMetadata(),
		"abapLandscapePortalUpdateAddOnProduct":     AbapLandscapePortalUpdateAddOnProductMetadata(),
		"ansSendEvent":                              AnsSendEventMetadata(),
		"apiKeyValueMapDownload":                    ApiKeyValueMapDownloadMetadata(),
		"apiKeyValueMapUpload":                      ApiKeyValueMapUploadMetadata(),
		"apiProviderDownload":                       ApiProviderDownloadMetadata(),
		"apiProviderList":                           ApiProviderListMetadata(),
		"apiProviderUpload":                         ApiProviderUploadMetadata(),
		"apiProxyDownload":                          ApiProxyDownloadMetadata(),
		"apiProxyList":                              ApiProxyListMetadata(),
		"apiProxyUpload":                            ApiProxyUploadMetadata(),
		"artifactPrepareVersion":                    ArtifactPrepareVersionMetadata(),
		"ascAppUpload":                              AscAppUploadMetadata(),
		"awsS3Upload":                               AwsS3UploadMetadata(),
		"azureBlobUpload":                           AzureBlobUploadMetadata(),
		"batsExecuteTests":                          BatsExecuteTestsMetadata(),
		"checkmarxExecuteScan":                      CheckmarxExecuteScanMetadata(),
		"checkmarxOneExecuteScan":                   CheckmarxOneExecuteScanMetadata(),
		"cloudFoundryCreateService":                 CloudFoundryCreateServiceMetadata(),
		"cloudFoundryCreateServiceKey":              CloudFoundryCreateServiceKeyMetadata(),
		"cloudFoundryCreateSpace":                   CloudFoundryCreateSpaceMetadata(),
		"cloudFoundryDeleteService":                 CloudFoundryDeleteServiceMetadata(),
		"cloudFoundryDeleteSpace":                   CloudFoundryDeleteSpaceMetadata(),
		"cloudFoundryDeploy":                        CloudFoundryDeployMetadata(),
		"cnbBuild":                                  CnbBuildMetadata(),
		"codeqlExecuteScan":                         CodeqlExecuteScanMetadata(),
		"containerExecuteStructureTests":            ContainerExecuteStructureTestsMetadata(),
		"containerSaveImage":                        ContainerSaveImageMetadata(),
		"contrastExecuteScan":                       ContrastExecuteScanMetadata(),
		"credentialdiggerScan":                      CredentialdiggerScanMetadata(),
		"detectExecuteScan":                         DetectExecuteScanMetadata(),
		"fortifyExecuteScan":                        FortifyExecuteScanMetadata(),
		"gaugeExecuteTests":                         GaugeExecuteTestsMetadata(),
		"gctsCloneRepository":                       GctsCloneRepositoryMetadata(),
		"gctsCreateRepository":                      GctsCreateRepositoryMetadata(),
		"gctsDeploy":                                GctsDeployMetadata(),
		"gctsExecuteABAPQualityChecks":              GctsExecuteABAPQualityChecksMetadata(),
		"gctsExecuteABAPUnitTests":                  GctsExecuteABAPUnitTestsMetadata(),
		"gctsRollback":                              GctsRollbackMetadata(),
		"githubCheckBranchProtection":               GithubCheckBranchProtectionMetadata(),
		"githubCommentIssue":                        GithubCommentIssueMetadata(),
		"githubCreateIssue":                         GithubCreateIssueMetadata(),
		"githubCreatePullRequest":                   GithubCreatePullRequestMetadata(),
		"githubPublishRelease":                      GithubPublishReleaseMetadata(),
		"githubSetCommitStatus":                     GithubSetCommitStatusMetadata(),
		"gitopsUpdateDeployment":                    GitopsUpdateDeploymentMetadata(),
		"golangBuild":                               GolangBuildMetadata(),
		"gradleExecuteBuild":                        GradleExecuteBuildMetadata(),
		"hadolintExecute":                           HadolintExecuteMetadata(),
		"helmExecute":                               HelmExecuteMetadata(),
		"imagePushToRegistry":                       ImagePushToRegistryMetadata(),
		"influxWriteData":                           InfluxWriteDataMetadata(),
		"integrationArtifactDeploy":                 IntegrationArtifactDeployMetadata(),
		"integrationArtifactDownload":               IntegrationArtifactDownloadMetadata(),
		"integrationArtifactGetMplStatus":           IntegrationArtifactGetMplStatusMetadata(),
		"integrationArtifactGetServiceEndpoint":     IntegrationArtifactGetServiceEndpointMetadata(),
		"integrationArtifactResource":               IntegrationArtifactResourceMetadata(),
		"integrationArtifactTransport":              IntegrationArtifactTransportMetadata(),
		"integrationArtifactTriggerIntegrationTest": IntegrationArtifactTriggerIntegrationTestMetadata(),
		"integrationArtifactUnDeploy":               IntegrationArtifactUnDeployMetadata(),
		"integrationArtifactUpdateConfiguration":    IntegrationArtifactUpdateConfigurationMetadata(),
		"integrationArtifactUpload":                 IntegrationArtifactUploadMetadata(),
		"isChangeInDevelopment":                     IsChangeInDevelopmentMetadata(),
		"jsonApplyPatch":                            JsonApplyPatchMetadata(),
		"kanikoExecute":                             KanikoExecuteMetadata(),
		"karmaExecuteTests":                         KarmaExecuteTestsMetadata(),
		"kubernetesDeploy":                          KubernetesDeployMetadata(),
		"malwareExecuteScan":                        MalwareExecuteScanMetadata(),
		"mavenBuild":                                MavenBuildMetadata(),
		"mavenExecute":                              MavenExecuteMetadata(),
		"mavenExecuteIntegration":                   MavenExecuteIntegrationMetadata(),
		"mavenExecuteStaticCodeChecks":              MavenExecuteStaticCodeChecksMetadata(),
		"mtaBuild":                                  MtaBuildMetadata(),
		"newmanExecute":                             NewmanExecuteMetadata(),
		"nexusUpload":                               NexusUploadMetadata(),
		"npmExecuteLint":                            NpmExecuteLintMetadata(),
		"npmExecuteScripts":                         NpmExecuteScriptsMetadata(),
		"pipelineCreateScanSummary":                 PipelineCreateScanSummaryMetadata(),
		"protecodeExecuteScan":                      ProtecodeExecuteScanMetadata(),
		"pythonBuild":                               PythonBuildMetadata(),
		"shellExecute":                              ShellExecuteMetadata(),
		"sonarExecuteScan":                          SonarExecuteScanMetadata(),
		"terraformExecute":                          TerraformExecuteMetadata(),
		"tmsExport":                                 TmsExportMetadata(),
		"tmsUpload":                                 TmsUploadMetadata(),
		"transportRequestDocIDFromGit":              TransportRequestDocIDFromGitMetadata(),
		"transportRequestReqIDFromGit":              TransportRequestReqIDFromGitMetadata(),
		"transportRequestUploadCTS":                 TransportRequestUploadCTSMetadata(),
		"transportRequestUploadRFC":                 TransportRequestUploadRFCMetadata(),
		"transportRequestUploadSOLMAN":              TransportRequestUploadSOLMANMetadata(),
		"uiVeri5ExecuteTests":                       UiVeri5ExecuteTestsMetadata(),
		"vaultRotateSecretId":                       VaultRotateSecretIdMetadata(),
		"whitesourceExecuteScan":                    WhitesourceExecuteScanMetadata(),
		"xsDeploy":                                  XsDeployMetadata(),
	}
}
