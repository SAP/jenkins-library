# Mapping of Go step names to their YAML metadata resource file
stepMetadata:
  artifactPrepareVersion: versioning.yaml
  fortifyExecuteScan: fortify.yaml
  mavenExecute: mavenExecute.yaml
  mavenExecuteStaticCodeChecks: mavenStaticCodeChecks.yaml
  mtaBuild: mtaBuild.yaml
  nexusUpload: nexusUpload.yaml
  npmExecuteScripts: npmExecuteScripts.yaml
  npmExecuteLint: npmExecuteLint.yaml
  sonarExecuteScan: sonar.yaml
  detectExecuteScan: detect.yaml
  whitesourceExecuteScan: whitesource.yaml

# Mapping of stages to the steps (and by extension Docker images) they use
containerMaps:
  init:
    - artifactPrepareVersion
    - mavenExecute
    - executeNpm
  build:
    - mavenBuild
    - mtaBuild
    - npmExecuteScripts
    - mavenExecute
    - executeNpm
    - mtaBuild
    - mavenExecuteStaticCodeChecks
    - npmExecuteLint
  backendIntegrationTests:
    - mavenExecute
    - executeNpm
    - createHdiContainer
  frontendIntegrationTests:
    - npmExecuteScripts
  additionalUnitTests:
    - npmExecuteScripts
  fortifyScan:
    - fortifyExecuteScan
  npmAudit:
    - executeNpm
  endToEndTests:
    - mavenExecute
    - npmExecuteScripts
    - cloudFoundryDeploy
    - neoDeploy
    - cloudFoundryCreateService
  performanceTests:
    - mavenExecute
    - checkJMeter
    - cloudFoundryDeploy
    - neoDeploy
  s4SdkQualityChecks:
    - mavenExecute
  artifactDeployment:
    - nexusUpload
  whitesourceScan:
    - mavenExecute
    - executeNpm
  security:
    - fortifyExecuteScan
    - detectExecuteScan
    - whitesourceExecuteScan
  compliance:
    - sonarExecuteScan
  productionDeployment:
    - mavenExecute
    - npmExecuteScripts
    - cloudFoundryDeploy
    - neoDeploy
    - cloudFoundryCreateService
