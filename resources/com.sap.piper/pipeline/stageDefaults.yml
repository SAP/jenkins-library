stages:
  Init:
    stepConditions:
      slackSendNotification:
        configKeys:
          - 'channel'
  'Pull-Request Voting':
    stepConditions:
      sonarExecuteScan:
        filePattern: '**/sonar-project.properties'
      mavenExecuteIntegration:
        filePattern: 'integration-tests/pom.xml'
      npmExecuteScripts:
        configKeys:
          - 'runScripts'
  Build:
    stepConditions:
      sonarExecuteScan:
        filePattern: '**/sonar-project.properties'
  'Additional Unit Tests':
    stepConditions:
      batsExecuteTests:
        filePattern: '**/*.bats'
      karmaExecuteTests:
        filePattern: '**/karma.conf.js'
      npmExecuteScripts:
        configKeys:
          - 'runScripts'
  Integration:
    stepConditions:
      npmExecuteScripts:
        configKeys:
          - 'runScripts'
      mavenExecuteIntegration:
        filePattern: 'integration-tests/pom.xml'
  Acceptance:
    stepConditions:
      multicloudDeploy:
        configKeys:
          - 'cfTargets'
          - 'neoTargets'
      cloudFoundryDeploy:
        configKeys:
          - 'cfSpace'
          - 'cloudFoundry/space'
      healthExecuteCheck:
        configKeys:
          - 'testServerUrl'
      newmanExecute:
        filePatternFromConfig: 'newmanCollection'
        configKeys:
          - 'testRepository'
      uiVeri5ExecuteTests:
        filePattern: '**/conf.js'
        configKeys:
          - 'testRepository'
      npmExecuteEndToEndTests:
        configKeys:
          - 'appUrls'
  Security:
    stepConditions:
      checkmarxExecuteScan:
        configKeys:
          - 'checkmarxCredentialsId'
      fortifyExecuteScan:
        configKeys:
          - 'fortifyCredentialsId'
      whitesourceExecuteScan:
        configKeys:
          - 'userTokenCredentialsId'
          - 'whitesource/userTokenCredentialsId'
          - 'whitesourceUserTokenCredentialsId'
  Performance:
    stepConditions:
      multicloudDeploy:
        configKeys:
          - 'cfTargets'
          - 'neoTargets'
      gatlingExecuteTests:
        filePatternFromConfig: 'pomPath'
        configKeys:
          - 'appUrls'
  Compliance: {}
  Promote:
    stepConditions:
      containerPushToRegistry:
        configKeys:
          - 'dockerRegistryUrl'
      nexusUpload:
        configKeys:
          - 'url'
  Release:
    stepConditions:
      multicloudDeploy:
        configKeys:
          - 'cfTargets'
          - 'neoTargets'
      cloudFoundryDeploy:
        configKeys:
          - 'cfSpace'
          - 'cloudFoundry/space'
      neoDeploy:
        configKeys:
          - 'neo/account'
      tmsUpload:
        configKeys:
          - nodeName
      healthExecuteCheck:
        configKeys:
          - 'testServerUrl'
      npmExecuteEndToEndTests:
        configKeys:
          - 'appUrls'
      githubPublishRelease:
        configKeys:
          - 'githubTokenCredentialsId'
  'Post Actions':
    stepConditions:
      slackSendNotification:
        configKeys:
          - 'channel'
