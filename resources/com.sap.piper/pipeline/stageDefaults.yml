stages:
  Init:
    stepConditions:
      slackSendNotification:
        configKeys:
          - 'channel'
  'Pull-Request Voting': {}
  Build: {}
  'Additional Unit Tests':
    stepConditions:
      batsExecuteTests:
        filePattern: '**/*.bats'
      karmaExecuteTests:
        filePattern: '**/karma.conf.js'
  Integration: {}
  Acceptance:
    stepConditions:
      cloudFoundryDeploy:
        configKeys:
          - 'cfSpace'
          - 'cloudFoundry/space'
      healthExecuteCheck:
        configKeys:
          - 'testServerUrl'
      newmanExecute:
        filePatternFromConfig: 'newmanCollection'
        configKeys:
          - 'testRepository'
      uiVeri5ExecuteTests:
        filePattern: '**/conf.js'
        configKeys:
          - 'testRepository'
  Security:
    stepConditions:
      whitesourceExecuteScan:
        configKeys:
          - 'userTokenCredentialsId'
          - 'whitesource/userTokenCredentialsId'
          - 'whitesourceUserTokenCredentialsId'
  Performance: {}
  Compliance: {}
  Promote:
    stepConditions:
      containerPushToRegistry:
        configKeys:
          - 'dockerRegistryUrl'
  Release:
    stepConditions:
      cloudFoundryDeploy:
        configKeys:
          - 'cfSpace'
          - 'cloudFoundry/space'
      neoDeploy:
        configKeys:
          - 'neo/account'
      healthExecuteCheck:
        configKeys:
          - 'testServerUrl'
      githubPublishRelease:
        configKeys:
          - 'githubTokenCredentialsId'
  'Post Actions':
    stepConditions:
      slackSendNotification:
        configKeys:
          - 'channel'
