metadata:
  name: cloudFoundryCreateService
  description: cloudFoundryCreateService
  longDescription: |
    Create CloudFoundryService
spec:
  inputs:
    secrets:
      - name: cfCredentialsId
        description: Jenkins credentials ID containing user and password to authenticate to the Cloud Foundry API
        type: jenkins
    params:
      - name: cfApiEndpoint
        type: string
        description: Cloud Foundry API endpoint
        scope:
        - PARAMETERS
        - STAGES
        - STEPS
        - GENERAL
        mandatory: true
        aliases:
          - name: cloudFoundry/apiEndpoint
      - name: username
        type: string
        description: User or E-Mail for CF
        scope:
        - PARAMETERS
        - STAGES
        - STEPS
        secret: true
        mandatory: true
      - name: password
        type: string
        description: User Password for CF User
        scope:
        - PARAMETERS
        - STAGES
        - STEPS
        mandatory: true
        secret: true
      - name: cfOrg
        type: string
        description: CF org
        scope:
        - PARAMETERS
        - STAGES
        - STEPS
        - GENERAL
        mandatory: true
        aliases:
          - name: cloudFoundry/org
      - name: cfSpace
        type: string
        description: CF Space
        scope:
        - PARAMETERS
        - STAGES
        - STEPS
        mandatory: true
        aliases:
          - name: cloudFoundry/space
      - name: cfService
        type: string
        description: Parameter for Cloud Foundry Service to be used for creating Cloud Foundry Service
        scope:
        - PARAMETERS
        - STAGES
        - STEPS
        mandatory: false
        aliases:
          - name: cloudFoundry/service
      - name: cfServicePlan
        type: string
        description: Parameter for Cloud Foundry Service Plan to be used when creating Cloud Foundry Service
        scope:
        - PARAMETERS
        - STAGES
        - STEPS
        mandatory: false
        aliases:
          - name: cloudFoundry/servicePlan
      - name: cfServiceInstanceName
        type: string
        description: Parameter for naming the Service Instance when creating Cloud Foundry Service
        scope:
        - PARAMETERS
        - STAGES
        - STEPS
        mandatory: false
        aliases:
          - name: cloudFoundry/serviceInstanceName
      - name: cfServiceBroker
        type: string
        description: Parameter for Service Broker to be used when creating Cloud Foundry Service
        scope:
        - PARAMETERS
        - STAGES
        - STEPS
        mandatory: false
        aliases:
          - name: cloudFoundry/serviceBroker
      - name: cfCreateServiceConfig
        type: string
        description: Path to JSON file or JSON in-line String for Cloud Foundry Service creation
        scope:
        - PARAMETERS
        - STAGES
        - STEPS
        mandatory: false
        aliases:
          - name: cloudFoundry/createServiceConfig
      - name: cfServiceTags
        type: string
        description: Flat list of Tags to be used when creating Cloud Foundry Service in a single string
        scope:
        - PARAMETERS
        - STAGES
        - STEPS
        mandatory: false
        aliases:
          - name: cloudFoundry/serviceTags
      - name: serviceManifest
        type: string
        description: Path to Cloud Foundry service manifest in YAML format for multiple service creations that are being passed to a Create-Service-Push cf cli plugin
        scope:
        - PARAMETERS
        - STAGES
        - STEPS
        mandatory: false
        aliases:
          - name: cloudFoundry/serviceManifest
      - name: manifestVariables
        type: '[]string'
        description: Defines a List of variables as key-value Map objects used for variable substitution within the file given by manifest. Defaults to an empty list, if not specified otherwise. This can be used to set variables like it is provided by `cf push --var key=value`. The order of the maps of variables given in the list is relevant in case there are conflicting variable names and values between maps contained within the list. In case of conflicts, the last specified map in the list will win. Though each map entry in the list can contain more than one key-value pair for variable substitution, it is recommended to stick to one entry per map, and rather declare more maps within the list. The reason is that if a map in the list contains more than one key-value entry, and the entries are conflicting, the conflict resolution behavior is undefined (since map entries have no sequence). Variables defined via `manifestVariables` always win over conflicting variables defined via any file given by `manifestVariablesFiles` - no matter what is declared before. This is the same behavior as can be observed when using `cf push --var` in combination with `cf push --vars-file`
        scope:
        - PARAMETERS
        - STAGES
        - STEPS
        mandatory: false
        aliases:
          - name: cloudFoundry/manifestVariables
      - name: manifestVariablesFiles
        type: string
        description: Defines the manifest variables Yaml files to be used to replace variable references in manifest. This parameter is optional and will default to `manifest-variables.yml`. This can be used to set variable files like it is provided by `cf push --vars-file <file>`. If the manifest is present and so are all variable files, a variable substitution will be triggered that uses the `cfManifestSubstituteVariables` step before deployment. The format of variable references follows the Cloud Foundry standard in `https://docs.cloudfoundry.org/devguide/deploy-apps/manifest-attributes.html#variable-substitution`
        scope:
        - PARAMETERS
        - STAGES
        - STEPS
        mandatory: false
        aliases:
          - name: cloudFoundry/manifestVariablesFiles
  containers:
    - name: cf
      image: ppiper/cf-cli
      workingDir: '/home/piper'
      imagePullPolicy: Never
