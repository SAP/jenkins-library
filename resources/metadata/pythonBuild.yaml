metadata:
  name: pythonBuild
  description: Step builds a python project
  longDescription: |
    Step build python project using the setup.py manifest and builds a wheel and tarball artifact . please note that currently python build only supports setup.py

    ### build with depedencies from a private repository
    if your build has dependencies from a private repository you can include the standard requirements.txt into the source code with `--extra-index-url` as the first line

    ```
    --extra-index-url https://${PIPER_VAULTCREDENTIAL_USERNAME}:${PIPER_VAULTCREDENTIAL_PASSWORD}@<privateRepoUrl>/simple
    ```
    `PIPER_VAULTCREDENTIAL_USERNAME` and `PIPER_VAULTCREDENTIAL_PASSWORD` are the username and password for the private repository
    and are exposed are environment variables that must be present in the environment where the Piper step runs or alternatively can be created using :
    [vault general purpose credentials](../infrastructure/vault.md#using-vault-for-general-purpose-and-test-credentials)
spec:
  inputs:
    params:
      - name: buildFlags
        type: "[]string"
        description: Defines list of build flags to be used.
        scope:
          - PARAMETERS
          - STAGES
          - STEPS
      - name: createBOM
        type: bool
        description: Creates the bill of materials (BOM) using CycloneDX plugin.
        scope:
          - GENERAL
          - STEPS
          - STAGES
          - PARAMETERS
        default: false
      - name: publish
        type: bool
        description: Configures the build to publish artifacts to a repository.
        scope:
          - STEPS
          - STAGES
          - PARAMETERS
        default: false
      - name: targetRepositoryPassword
        description: "Password for the target repository where the compiled binaries shall be uploaded - typically provided by the CI/CD environment."
        type: string
        scope:
          - PARAMETERS
          - STAGES
          - STEPS
        secret: true
        resourceRef:
          - name: commonPipelineEnvironment
            param: custom/repositoryPassword
      - name: targetRepositoryUser
        description: "Username for the target repository where the compiled binaries shall be uploaded - typically provided by the CI/CD environment."
        type: string
        scope:
          - PARAMETERS
          - STAGES
          - STEPS
        secret: true
        resourceRef:
          - name: commonPipelineEnvironment
            param: custom/repositoryUsername
      - name: targetRepositoryURL
        description: "URL of the target repository where the compiled binaries shall be uploaded - typically provided by the CI/CD environment."
        type: string
        scope:
          - PARAMETERS
          - STAGES
          - STEPS
        resourceRef:
          - name: commonPipelineEnvironment
            param: custom/repositoryUrl
      - name: buildSettingsInfo
        type: string
        description: build settings info is typically filled by the step automatically to create information about the build settings that were used during the maven build . This information is typically used for compliance related processes.
        scope:
          - STEPS
          - STAGES
          - PARAMETERS
        resourceRef:
          - name: commonPipelineEnvironment
            param: custom/buildSettingsInfo
      - name: virutalEnvironmentName
        type: string
        description: name of the virtual environment that will be used for the build
        scope:
          - STEPS
          - STAGES
          - PARAMETERS
        default: piperBuild-env
      - name: requirementsFilePath
        type: string
        description: file path to the requirements.txt file needed for the sbom cycloneDx file creation.
        scope:
          - STEPS
          - STAGES
          - PARAMETERS
        default: requirements.txt
  outputs:
    resources:
      - name: commonPipelineEnvironment
        type: piperEnvironment
        params:
          - name: custom/buildSettingsInfo
  containers:
    - name: python
      image: python:3.9
