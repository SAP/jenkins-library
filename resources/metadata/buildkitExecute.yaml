metadata:
  name: buildkitExecute
  description: Executes a Buildkit build for creating a Docker container.
  longDescription: |
    Executes a Buildkit build for creating a Docker container.

spec:
  inputs:
    secrets:
      - name: dockerConfigJsonCredentialsId
        description: Jenkins 'Secret file' credentials ID containing Docker config.json (with registry credential(s))
        type: jenkins
    params:
      - name: buildOptions
        type: "[]string"
        description: Defines a list of build options for buildkit
        scope:
          - PARAMETERS
          - STAGES
          - STEPS
        default: []
      - name: dockerfilePath
        type: string
        description: Defines the location of the Dockerfile relative to the pipeline working directory.
        scope:
          - PARAMETERS
          - STAGES
          - STEPS
        default: .
      - name: createBOM
        type: bool
        description: Creates the BOM using Syft and stores it in a file
        scope:
          - PARAMETERS
          - STAGES
          - STEPS
        default: false
      - name: syftDownloadURL
        type: string
        description: URL to download syft from. If not specified, the default URL from pkg/syft/defaults.go will be used
        scope:
          - PARAMETERS
          - STAGES
          - STEPS
        default: ""
      - name: containerImageName
        aliases:
          - name: dockerImageName
        type: string
        description: Name of the container which will be built
        scope:
          - GENERAL
          - PARAMETERS
          - STAGES
          - STEPS
      - name: containerImageTag
        aliases:
          - name: artifactVersion
        type: string
        description: Tag of the container which will be built
        scope:
          - GENERAL
          - PARAMETERS
          - STAGES
          - STEPS
        resourceRef:
          - name: commonPipelineEnvironment
            param: artifactVersion
      - name: containerRegistryUrl
        aliases:
          - name: dockerRegistryUrl
        type: string
        description: URL of the container registry where the image should be pushed to
        scope:
          - GENERAL
          - PARAMETERS
          - STAGES
          - STEPS
        resourceRef:
          - name: commonPipelineEnvironment
            param: container/registryUrl
      - name: dockerConfigJSON
        type: string
        description: Path to the file `.docker/config.json` containing docker credentials
        scope:
          - PARAMETERS
          - STAGES
          - STEPS
        secret: true
        resourceRef:
          - name: dockerConfigJsonCredentialsId
            type: secret

  outputs:
    resources:
      - name: commonPipelineEnvironment
        type: piperEnvironment
        params:
          - name: container/registryUrl
          - name: container/imageNameTag
          - name: container/imageNames
            type: "[]string"
          - name: container/imageNameTags
            type: "[]string"
      - name: reports
        type: reports
        params:
          - filePattern: "**/bom-*.xml"
            type: sbom

    containers:
      - name: buildkit
        image: moby/buildkit:master-rootless
        env:
          - name: BUILDKITD_FLAGS
            value: --oci-worker-no-process-sandbox
        # To push the image to a registry, add
        # `--output type=image,name=docker.io/username/image,push=true`
        securityContext:
          # Needs Kubernetes >= 1.19
          seccompProfile:
            type: Unconfined
          # To change UID/GID, you need to rebuild the image
          runAsUser: 1000
          runAsGroup: 1000
        volumeMounts:
          - name: workspace
            readOnly: true
            mountPath: /workspace
          # Dockerfile has `VOLUME /home/user/.local/share/buildkit` by default too,
          # but the default VOLUME does not work with rootless on Google's Container-Optimized OS
          # as it is mounted with `nosuid,nodev`.
          # https://github.com/moby/buildkit/issues/879#issuecomment-1240347038
          - mountPath: /home/user/.local/share/buildkit
            name: buildkitd
    # To push the image, you also need to create `~/.docker/config.json` secret
    # and set $DOCKER_CONFIG to `/path/to/.docker` directory.
    volumes:
      - name: workspace
        emptyDir: {}
      - name: buildkitd
        emptyDir: {}
