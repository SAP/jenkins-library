{
    "$schema": "https://docs.renovatebot.com/renovate-schema.json",
    "extends": [
        "config:base"
    ],
    "labels": [
        "dependencies"
    ],
    "packageRules": [
        {
            "description": "Create PRs to roll back Go module if the current version is not found in the registry.",
            "matchManagers": ["gomod"],
            "rollbackPrs": true,
            "matchPaths": [
                "!integration/testdata/**",
                "!test/resources/**"
            ]
        },
        {
            "description": "Automerge patch version updates for Go modules (except versions 0.x as they could have breaking changes)",
            "matchManagers": ["gomod"],
            "matchUpdateTypes": ["patch"],
            "matchCurrentVersion": "!/^(v?0)/",
            "automerge": true,
            "addLabels": ["renovate-automerge"],
            "matchPaths": [
                "!integration/testdata/**",
                "!test/resources/**"
            ]
        }
    ],
    "customManagers": [
        {
            "customType": "regex",
            "matchStringsStrategy": "any",
            "managerFilePatterns": [
                "cmd/golangBuild.go$/"
            ],
            "matchStrings": [
                "golangCycloneDXPackage = \"(?<depName>github.com/CycloneDX/cyclonedx-gomod/cmd/cyclonedx-gomod)@v(?<currentValue>.*)\""
            ],
            "depTypeTemplate": "dependencies",
            "datasourceTemplate": "github-releases",
            "extractVersionTemplate": "^v(?<version>.*)$",
            "autoReplaceStringTemplate": "golangCycloneDXPackage = \"{{depName}}@v{{newValue}}\""
        },
        {
            "customType": "regex",
            "matchStringsStrategy": "any",
            "managerFilePatterns": [
                "cmd/gradleExecuteBuild.go$/"
            ],
            "matchStrings": [
                "classpath \"(?<depName>org.cyclonedx:cyclonedx-gradle-plugin):(?<currentValue>.*)\""
            ],
            "depTypeTemplate": "dependencies",
            "datasourceTemplate": "gradle-version",
            "extractVersionTemplate": "^(?<version>.*)$",
            "autoReplaceStringTemplate": "classpath \"{{depName}}:{{newValue}}\""
        },
        {
            "customType": "regex",
            "matchStringsStrategy": "any",
            "managerFilePatterns": [
                "cmd/mavenBuild.go$/"
            ],
            "matchStrings": [
                "mvnCycloneDXPackage = \"(?<depName>org.cyclonedx:cyclonedx-maven-plugin):(?<currentValue>.*)\""
            ],
            "depTypeTemplate": "dependencies",
            "datasourceTemplate": "maven",
            "extractVersionTemplate": "^(?<version>.*)$",
            "autoReplaceStringTemplate": "mvnCycloneDXPackage = \"{{depName}}:{{newValue}}\""
        },
        {
            "customType": "regex",
            "matchStringsStrategy": "any",
            "managerFilePatterns": [
                "integration/testdata/TestGradleIntegration/java-project-with-bom-plugin/build.gradle$/"
            ],
            "matchStrings": [
                "id \"(?<depName>org.cyclonedx.bom)\" version \"(?<currentValue>.*)\""
            ],
            "depTypeTemplate": "dependencies",
            "datasourceTemplate": "gradle-version",
            "extractVersionTemplate": "^(?<version>.*)$",
            "autoReplaceStringTemplate": "id \"{{depName}}\" version \"{{newValue}}\""
        },
        {
            "customType": "regex",
            "matchStringsStrategy": "any",
            "managerFilePatterns": [
                "integration/integration_golang_test.go$/"
            ],
            "matchStrings": [
                "(?<depName>github.com/CycloneDX/cyclonedx-gomod/cmd/cyclonedx-gomod)@v(?<currentValue>.*)"
            ],
            "depTypeTemplate": "dependencies",
            "datasourceTemplate": "github-releases",
            "extractVersionTemplate": "^(?<version>.*)$",
            "autoReplaceStringTemplate": "{{depName}}@v{{newValue}}"
        }
    ],
    "postUpdateOptions": [
        "gomodTidy",
        "gomodUpdateImportPaths"
    ]
}
