name: Go unit tests (Pull Request)

on:
  # push:
    # branches:
      # - master
  pull_request:
    branches:
      - master
  issue_comment:
    types:
      - created
      - edited

jobs:
  unit_tests:
    # echo "pull_request=$(curl ${{ github.event.comment.issue_url }} |
    if: |
      (
        github.event.comment.body == '/ut' || github.event.comment.body == '/ut-go'
      ) && (
        github.event.comment.author_association == 'COLLABORATOR' || github.event.comment.author_association == 'OWNER' || github.event.comment.author_association == 'MEMBER'
      ) || github.event.pull_request.head.repo.fork != false
    outputs:
      sha: ${{ steps.sha.outputs.sha }}
    runs-on: ubuntu-latest
    steps:
      - uses: styfle/cancel-workflow-action@0.10.0
      # - name: Get pull request URL
      #   id: pull_request
      #   run: |
      #     echo "pull_request=$(curl ${{ github.event.comment.issue_url }} |
      #     jq '.pull_request.url' |
      #     sed 's/\"//g')" >> "$GITHUB_OUTPUT"
      # - name: Get repository
      #   id: repository
      #   run: |
      #     echo "repository=$(curl ${{ steps.pull_request.outputs.pull_request }} |
      #     jq '.head.repo.full_name' |
      #     sed 's/\"//g')" >> "$GITHUB_OUTPUT"
      # - name: Get branch name
      #   id: branch_name
      #   run: |
      #     echo "branch_name=$(curl ${{ steps.pull_request.outputs.pull_request }} |
      #     jq '.head.ref' |
      #     sed 's/\"//g')" >> "$GITHUB_OUTPUT"
      - uses: actions/checkout@v3
        # with:
          # repository: ${{ steps.repository.outputs.repository }}
          # ref: ${{ steps.branch_name.outputs.branch_name }}
      - name: Get commit SHA
        id: sha
        run: |
          echo "sha=$(git log --format=%H -n 1)" >> "$GITHUB_OUTPUT"
      - run: echo ${{steps.sha.output.sha}}
      - name: Update status
        run: |
          curl \
            --location \
            --request POST 'https://api.github.com/repos/vstarostin/jenkins-library/statuses/${{ steps.sha.outputs.sha }}' \
            -H 'Content-Type: application/json' \
            --data '{"state": "pending",
                    "context": "Go / unit-tests",
                    "target_url": "https://github.com/vstarostin/jenkins-library/actions/runs/${{ github.run_id }}"}' \
            -H 'Authorization: token ${{secrets.INTEGRATION_TEST_VOTING_TOKEN}}'
      - uses: actions/setup-go@v1
        with:
          go-version: '1.18.x'
      - name: Cache Golang Packages
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-golang-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golang-
      - name: checkout
        uses: actions/checkout@v2
      - name: unit-test
        run: echo ${{secrets.ENV_TEST}}
      - name: check if it is a fork
        run: echo ${{ github.event.pull_request.head.repo.fork }}
      - name: check event type
        run: echo  ${{ github.event.type }}

  finish:
    name: Finish
    if: always() && needs.unit_tests.result == 'success'
    needs:
      - unit_tests
    runs-on: ubuntu-latest
    steps:
      - name: Update status
        run: |
          if [[ "${{ needs.unit_tests.result }}" == "success" ]]
          then
            curl \
              --location \
              --request POST 'https://api.github.com/repos/vstarostin/jenkins-library/statuses/${{ needs.unit_tests.outputs.sha }}' \
              -H 'Content-Type: application/json' \
              --data '{"state": "success",
                      "context": "Go / unit-tests",
                      "target_url": "https://github.com/vstarostin/jenkins-library/actions/runs/${{ github.run_id }}"}' \
              -H 'Authorization: token ${{secrets.INTEGRATION_TEST_VOTING_TOKEN}}' && \
            exit 0
          else
            curl \
              --location \
              --request POST 'https://api.github.com/repos/vstarostin/jenkins-library/statuses/${{ needs.unit_tests.outputs.sha }}' \
              -H 'Content-Type: application/json' \
              --data '{"state": "failure",
                      "context": "Go / unit-tests",
                      "target_url": "https://github.com/vstarostin/jenkins-library/actions/runs/${{ github.run_id }}"}' \
              -H 'Authorization: token ${{secrets.INTEGRATION_TEST_VOTING_TOKEN}}' && \
            exit 1
          fi

