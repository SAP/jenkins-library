name: Go

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  unit:
    # if: github.event.pull_request.head.repo.fork != true
    runs-on: ubuntu-latest
    steps:
      - name: check if it is a fork (1)
        run: echo ${{github.event.pull_request.head.repo.fork}}
      - name: check event type
        run: echo  ${{ github.event.type }}
      - uses: styfle/cancel-workflow-action@0.10.0
      - uses: actions/setup-go@v1
        with:
          go-version: '1.18.x'
      - name: Cache Golang Packages
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-golang-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golang-
      - name: checkout
        uses: actions/checkout@v2
      - name: read code climate reporter id
        id: cc_reporter_id
        env:
          ENV_TEST: ${{ secrets.ENV_TEST }}
        run: echo "cc_reporter_id=${{ env.ENV_TEST }}" >> "$GITHUB_OUTPUT"

        # uses: paambaati/codeclimate-action@v2.6.0
        # env:
          # CC_TEST_REPORTER_ID: ${{ secrets.CODE_CLIMATE_REPORTER_ID }}
        # with:
          # coverageCommand: go test -tags=unit ./... -coverprofile cover.out
          # coverageLocations: cover.out:gocov
          # truncate package name from file paths in report
          # prefix: github.com/SAP/jenkins-library/
      - name: event name
        run: echo "${{ github.event_name }}"

      - name: check if it's a fork
        run: |
          echo "${{ github.event.pull_request.head.repo.fork }}"
          echo "${{ github.event.pull_request.head.repo.fork != true }}"
          echo "${{ github.event.pull_request.head.repo.fork == false }}"
          echo "${{ github.repository_owner }}"

      - name: unit-test
        if: github.repository_owner == 'VSTAROSTIN'
        # if: steps.cc_reporter_id.outputs.cc_reporter_id != null
        run: |
          echo ${{ steps.cc_reporter_id.outputs.cc_reporter_id }}

      - name: unit-test (for fork)
        if: github.repository_owner != 'VSTAROSTIN'
        # if: github.event.pull_request.head.repo.fork == true
        # if: steps.cc_reporter_id.outputs.cc_reporter_id == null
        run: |
          echo ${{ steps.cc_reporter_id.outputs.cc_reporter_id }}

      
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v1
        with:
          go-version: '1.18.x'
      - name: Cache Golang Packages
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-golang-format${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golang-format
            ${{ runner.os }}-golang-
      - name: checkout
        uses: actions/checkout@v2
      - name: format
        run: go fmt ./...
      - name: verify
        run: git diff --exit-code
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v1
        with:
          go-version: '1.19.x'
          # action requires go@1.19
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: staticcheck
        uses: dominikh/staticcheck-action@v1.2.0
        with:
          cache-key: ${{ runner.os }}-golang-staticcheck
          install-go: false
  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v1
        with:
          go-version: '1.18.x'
      - name: Cache Golang Packages
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-golang-generate${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golang-generate
            ${{ runner.os }}-golang-
      - name: checkout
        uses: actions/checkout@v2
      - name: generate
        run: go run pkg/generator/step-metadata.go
      - name: verify
        run: git diff --exit-code
  dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v1
        with:
          go-version: '1.18.x'
      - name: Cache Golang Packages
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-golang-dependencies${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golang-dependencies
            ${{ runner.os }}-golang-
      - name: checkout
        uses: actions/checkout@v2
      - name: cleanup dependencies
        run: go mod tidy
      - name: verify
        run: git diff --name-only --exit-code
