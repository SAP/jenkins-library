name: trigger integration tests

on:
  issue_comment:
    types: [created]

jobs:
  consumer-tests:
    name: consumer tests

    runs-on: ubuntu-latest
    if: github.event.comment.body == '/it' && (github.event.comment.author_association == 'collaborator' || github.event.comment.author_association == 'owner')

    steps:
      - name: get pull request url
        id: pullrequest
        run: echo "::set-output name=pullrequest::$(curl ${{ github.event.comment.issue_url }} | jq '.pull_request.url' | sed 's/\"//g')"
      - name: get branch name
        id: branchname
        run: echo "::set-output name=branchname::$(curl ${{ steps.pullrequest.outputs.pullrequest }} | jq '.head.ref' | sed 's/\"//g')"
      - name: get repository
        id: repository
        run: echo "::set-output name=repository::$(curl ${{ steps.pullrequest.outputs.pullrequest }} | jq '.head.repo.full_name' | sed 's/\"//g')"
      - name: checkout
        uses: actions/checkout@v2
        with:
          repository: ${{ steps.repository.outputs.repository }}
          ref: ${{ steps.branchname.outputs.branchname }}
      - uses: actions/setup-java@v1
        with:
          java-version: "11"
      - name: install groovy
        run: sudo apt-get update && sudo apt-get install groovy -y
      - name: setup git
        run: git config --global user.email "piper-testing-bot@example.com" && git config --global user.name "piper-testing-bot"
      - name: run consumer tests
        run: cd consumer-test && groovy consumertestcontroller.groovy
        env:
          repository_under_test: ${{ steps.repository.outputs.repository }}
          branch_name: ${{ steps.branchname.outputs.branchname }}
          build_web_url: https://github.com/sap/jenkins-library/actions/runs/${{ github.run_id }}
          integration_test_voting_token: ${{ secrets.integration_test_voting_token }}
          cx_infra_it_cf_username: ${{ secrets.cx_infra_it_cf_username }}
          cx_infra_it_cf_password: ${{ secrets.cx_infra_it_cf_password }}
          neo_deploy_username: ${{ secrets.neo_deploy_username }}
          neo_deploy_password: ${{ secrets.neo_deploy_password }}
          cx_infra_it_tms_upload: ${{ secrets.cx_infra_it_tms_upload }}

  go-integration-tests:
    name: go integration tests

    runs-on: ubuntu-latest
    if: github.event.comment.body == '/it' && (github.event.comment.author_association == 'collaborator' || github.event.comment.author_association == 'owner')

    steps:
      - name: get pull request url
        id: pullrequest
        run: echo "::set-output name=pullrequest::$(curl ${{ github.event.comment.issue_url }} | jq '.pull_request.url' | sed 's/\"//g')"
      - name: get branch name
        id: branchname
        run: echo "::set-output name=branchname::$(curl ${{ steps.pullrequest.outputs.pullrequest }} | jq '.head.ref' | sed 's/\"//g')"
      - name: get repository
        id: repository
        run: echo "::set-output name=repository::$(curl ${{ steps.pullrequest.outputs.pullrequest }} | jq '.head.repo.full_name' | sed 's/\"//g')"
      - name: checkout
        uses: actions/checkout@v2
        with:
          repository: ${{ steps.repository.outputs.repository }}
          ref: ${{ steps.branchname.outputs.branchname }}
      - name: get commit id
        id: commitid
        run: echo "::set-output name=commitid::$(git log --format=%h -n 1)"
      - name: update status
        run: |
          curl --location --request post 'https://api.github.com/repos/sap/jenkins-library/statuses/${{ steps.commitid.outputs.commitid }}' -h 'content-type: application/json' --data '{"state": "pending", "context": "go / integration-tests", "target_url": "https://github.com/sap/jenkins-library/actions/runs/${{ github.run_id }}"}' -h 'authorization: token ${{secrets.integration_test_voting_token}}'
      - uses: actions/setup-go@v1
        with:
          go-version: "1.13.x"
      - name: build
        env:
          cgo_enabled: 0
        # with `-tags release` we ensure that shared test utilities won't end up in the binary
        run: go build -o piper -tags release
      - name: test
        env:
          piper_integration_github_token: ${{secrets.piper_integration_github_token}}
        run: go test -tags=integration ./integration/...
      - name: update status
        run: |
          curl --location --request post 'https://api.github.com/repos/sap/jenkins-library/statuses/${{ steps.commitid.outputs.commitid }}' -h 'content-type: application/json' --data '{"state": "success", "context": "go / integration-tests", "target_url": "https://github.com/sap/jenkins-library/actions/runs/${{ github.run_id }}"}' -h 'authorization: token ${{secrets.integration_test_voting_token}}'
      - name: update status
        if: failure()
        run: |
          curl --location --request post 'https://api.github.com/repos/sap/jenkins-library/statuses/${{ steps.commitid.outputs.commitid }}' -h 'content-type: application/json' --data '{"state": "failure", "context": "go / integration-tests", "target_url": "https://github.com/sap/jenkins-library/actions/runs/${{ github.run_id }}"}' -h 'authorization: token ${{secrets.integration_test_voting_token}}'
